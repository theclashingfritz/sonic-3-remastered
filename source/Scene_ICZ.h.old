#ifndef SCENE_ICZ_H
#define SCENE_ICZ_H

#include "Standard.h"
#include "Application.h"
#include "TextureAudio.h"
#include "LevelScene.h"
#include "Player.h"

class Scene_ICZ : public LevelScene {
public:
    // Level Special
    Texture* tex_Blastoid;
    Texture* tex_Block;
    Texture* tex_BossEffects;
    Texture* tex_BossExtra;
    Texture* tex_BreakableBar;
    Texture* tex_BreakablePlatforms;
    Texture* tex_Bridge;
    Texture* tex_Bubbler;
    Texture* tex_Buggernaut;
    Texture* tex_Button;
    Texture* tex_Fan;
    Texture* tex_FloatingPlatform;
    Texture* tex_Geyser;
    Texture* tex_GeyserParticles1_;
    Texture* tex_GeyserParticles2_;
    Texture* tex_HandLauncher;
    Texture* tex_Jawz;
    Texture* tex_LargeFan;
    Texture* tex_MegaChopper;
    Texture* tex_Miniboss;
    Texture* tex_MinibossPole;
    Texture* tex_NonAnim_;
    Texture* tex_Pointdexter;
    Texture* tex_SpinningColumn;
    Texture* tex_StarpostWater;
    Texture* tex_TurboSpiker;
    Texture* tex_WaterDrop;
    Texture* tex_WaterlineTop;
    Texture* tex_WaterRush;
    Texture* tex_Waves;

    int giantWallID = -1;
    float giantWallX = 0;

    // Clean this up later
    int waterTunnels[18 * 7] = {
        //Min X, Min Y, Max X, Max Y, X Velo, Y Velo, Player can influence which axis flag (Set = X, Clear = Y)
        0x380,  0x580, 0x5A0,  0x5C0, 0x3F0,  0xFFE0,    0,
		0x5A0,  0x560, 0xA80,  0x5C0, 0x3F0,  0xFFF0,     0,
		0x1400, 0xA80, 0x15A0, 0xAC0, 0x400,       0,     0,
		0x15A0,	0xA40, 0x1960, 0xAC0, 0x400,  0xFFC0,     0,
        0x1990,	0x580, 0x19E0, 0x7F0,      0, 0xF700,  0x200,
		0x1990, 0x7F0, 0x19F0, 0x878, 0xFEC0, 0xFD00,  0x100,
		0x1990, 0x878, 0x19F0, 0x8FD, 0x140,  0xFD00,  0x100,
		0x1990, 0x8FD, 0x19F0, 0x978, 0xFEC0, 0xFD00,  0x100,
		0x1990, 0x978, 0x19F0, 0xA10, 0x100,  0xFD00,	0x100,
		0x1960, 0xA10, 0x19D0, 0xA80, 0x300,  0xFD80,	 0x100,
		0x2B00, 0x800, 0x2C20, 0x840, 0x400,       0,     0,
		0x2C20,	0x7B0, 0x2EE0, 0x840, 0x400,  0xFFC0,     0,
		0x2EE0,	0x790, 0x2F10, 0x810, 0x300,  0xFD00,  0x100,
        0x2F10, 0x700, 0x2F30, 0x800, 0x200,  0xFD00,  0x100,
		0x2F30, 0x700, 0x2F70, 0x800, 0x100,  0xFD00,  0x100,
		0x2F30, 0x480, 0x2F70, 0x700,	  0,  0xF700,  0x200,

		0x3980, 0x810, 0x3AA0, 0x840, 0x400,       0,	   0,
		0x3AA0, 0x7D0, 0x3F00, 0x840, 0x400,  0x0000,      0,
    };
    bool inputBuffer[6 * 20];

    void HandleCamera();
    void BackgroundParallaxRender();

    void LoadLayoutRW(void* data);
    void InitZone(bool resetTextures, int check, int specialRing, bool actTransition);
    void DoSwitchActZone();

    void loadUniqueTextures(Application* app, int act);
    void CreateUniqueTextures(Application* app, int act);
    void UnloadUniqueTextures(Application* app, int act);

    void LoadMusicAndSounds(Application* app, int act);

    void DoPaletteWaterStuff();
    void DoBackgroundStuff();
    void DrawAboveEverythingNonHUD();
    void DrawPrettyMuchEverything();

    void LoadPalette();
    void createParallaxLayers();
    void LoadObjectData();

    void Update();
    void Render();
    void Free();

    Scene_ICZ(Application* app, int act, int checkpoint);
};


#endif /* Scene_ICZ_H */
