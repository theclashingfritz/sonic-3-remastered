#if __VERSION__ < 110
precision mediump float;
#endif
uniform sampler2D u_sampler;
uniform sampler2D u_palette1;
uniform sampler2D u_palette2;

uniform float u_waterline;
uniform float u_waterlineStop;
uniform int u_globalFrame;

uniform vec4 u_color;
uniform bool u_useTex;

uniform vec4 u_data;

#if __VERSION__ >= 130
    in vec2 _texcoord;
    in vec4 _position;

    out vec4 gl_FragColor;
#else
    varying vec2 _texcoord;
    varying vec4 _position;
#endif

void main() {
    vec4 color;
    if (u_useTex) {
        vec4 index = texture2D(u_sampler, _texcoord);
        vec4 pal = index;

        float boost = 0.0;

        bool wet = false;
        if (gl_FragCoord.y / 225.0 < u_waterline && gl_FragCoord.y / 225.0 > u_waterlineStop)
            wet = true;

        if (pal[3] == 0.0) {
            discard;
        }

        int value = 3;
        if (index[0] > 0.0)
            value = 0;
        else if (index[1] > 0.0)
            value = 1;
        else if (index[2] > 0.0)
            value = 2;

        if (mod(_position.w, 4.0) > 1.0 - 0.1 && mod(_position.w, 4.0) < 1.0 + 0.1) {
            pal = vec4(0.0, 0.0, 0.0, 1.0);

            int newValue = int(mod(float(value + 1), 4.0));
            pal[newValue] = index[value];
            if (newValue == 3)
                pal[3] += 15.0 / 255.0;
            else if (value == 3)
                pal[newValue] -= 15.0 / 255.0;
        }
        if (mod(_position.w, 4.0) > 2.0 - 0.1 && mod(_position.w, 4.0) < 2.0 + 0.1) {
            pal = vec4(0.0, 0.0, 0.0, 1.0);

            int newValue = int(mod(float(value + 2), 4.0));
            pal[newValue] = index[value];
            if (newValue == 3)
                pal[3] += 15.0 / 255.0;
            else if (value == 3)
                pal[newValue] -= 15.0 / 255.0;
        }
        if (mod(_position.w, 4.0) > 3.0 - 0.1 && mod(_position.w, 4.0) < 3.0 + 0.1) {
            pal = vec4(0.0, 0.0, 0.0, 1.0);

            int newValue = int(mod(float(value + 3), 4.0));
            pal[newValue] = index[value];
            if (newValue == 3)
                pal[3] += 15.0 / 255.0;
            else if (value == 3)
                pal[newValue] -= 15.0 / 255.0;
        }
        if (_position.w > 4.0 - 0.1) {
            boost = floor(_position.w / 4.0);
        }

        vec2 finalVector = vec2(0, 0);
        if (pal[0] > 0.0 && pal[3] == 1.0) {
            finalVector = vec2(0.125, pal[0] + boost / 16.0);
        }
        else if (pal[1] > 0.0 && pal[3] == 1.0) {
            finalVector = vec2(0.375, pal[1] + boost / 16.0);
        }
        else if (pal[2] > 0.0 && pal[3] == 1.0) {
            finalVector = vec2(0.625, pal[2] + boost / 16.0);
        }
        else {
            pal[3] -= 15.0 / 255.0;
            pal[3] = pal[3] * 16.0;
            finalVector = vec2(0.875, pal[3] / 16.0 + boost / 16.0);
            if (u_data.r > 0.5 && pal[3] >= 8.0 && pal[3] < 11.0) {
                //finalVector = vec2(0.625, pal[3] / 16.0 + boost / 16.0);
                //wet = true;
            }
        }
        if (wet) {
            color = texture2D(u_palette2, finalVector) * vec4(u_color.r >= 0.0 ? u_color.r : 1.0, u_color.g, u_color.b, abs(u_color.a));
        }
        else {
            color = texture2D(u_palette1, finalVector) * vec4(u_color.r >= 0.0 ? u_color.r : 1.0, u_color.g, u_color.b, abs(u_color.a));
        }
    }
    else {
        color = vec4(u_color.r >= 0.0 ? u_color.r : 1.0, u_color.g, u_color.b, abs(u_color.a));
    }


    gl_FragColor = color;
    if (u_color.r < 0.0)
        gl_FragColor = mix(color, vec4(vec3(color.r + color.g + color.b) / 3.0, color.a), abs(u_color.r));
}
